// Code generated by protoc-gen-go.
// source: conversation.proto
// DO NOT EDIT!

package ricochet

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ConversationEvent_Type int32

const (
	ConversationEvent_NULL     ConversationEvent_Type = 0
	ConversationEvent_POPULATE ConversationEvent_Type = 1
	ConversationEvent_RECEIVE  ConversationEvent_Type = 2
	ConversationEvent_SEND     ConversationEvent_Type = 3
	ConversationEvent_UPDATE   ConversationEvent_Type = 4
)

var ConversationEvent_Type_name = map[int32]string{
	0: "NULL",
	1: "POPULATE",
	2: "RECEIVE",
	3: "SEND",
	4: "UPDATE",
}
var ConversationEvent_Type_value = map[string]int32{
	"NULL":     0,
	"POPULATE": 1,
	"RECEIVE":  2,
	"SEND":     3,
	"UPDATE":   4,
}

func (x ConversationEvent_Type) String() string {
	return proto.EnumName(ConversationEvent_Type_name, int32(x))
}
func (ConversationEvent_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 0} }

type Message_Status int32

const (
	Message_NULL      Message_Status = 0
	Message_RECEIVED  Message_Status = 1
	Message_QUEUED    Message_Status = 2
	Message_SENDING   Message_Status = 3
	Message_DELIVERED Message_Status = 4
	Message_ERROR     Message_Status = 5
)

var Message_Status_name = map[int32]string{
	0: "NULL",
	1: "RECEIVED",
	2: "QUEUED",
	3: "SENDING",
	4: "DELIVERED",
	5: "ERROR",
}
var Message_Status_value = map[string]int32{
	"NULL":      0,
	"RECEIVED":  1,
	"QUEUED":    2,
	"SENDING":   3,
	"DELIVERED": 4,
	"ERROR":     5,
}

func (x Message_Status) String() string {
	return proto.EnumName(Message_Status_name, int32(x))
}
func (Message_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{3, 0} }

type ConversationEvent struct {
	Type ConversationEvent_Type `protobuf:"varint,1,opt,name=type,enum=ricochet.ConversationEvent_Type" json:"type,omitempty"`
	Msg  *Message               `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *ConversationEvent) Reset()                    { *m = ConversationEvent{} }
func (m *ConversationEvent) String() string            { return proto.CompactTextString(m) }
func (*ConversationEvent) ProtoMessage()               {}
func (*ConversationEvent) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ConversationEvent) GetMsg() *Message {
	if m != nil {
		return m.Msg
	}
	return nil
}

type MonitorConversationsRequest struct {
}

func (m *MonitorConversationsRequest) Reset()                    { *m = MonitorConversationsRequest{} }
func (m *MonitorConversationsRequest) String() string            { return proto.CompactTextString(m) }
func (*MonitorConversationsRequest) ProtoMessage()               {}
func (*MonitorConversationsRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

type Entity struct {
	// contactId and address MAY be unspecified for self
	ContactId int32  `protobuf:"varint,1,opt,name=contactId" json:"contactId,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	IsSelf    bool   `protobuf:"varint,3,opt,name=isSelf" json:"isSelf,omitempty"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

type Message struct {
	Sender    *Entity `protobuf:"bytes,1,opt,name=sender" json:"sender,omitempty"`
	Recipient *Entity `protobuf:"bytes,2,opt,name=recipient" json:"recipient,omitempty"`
	Timestamp int64   `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	// Identifiers are unique for the tuple of (sender, recipient, direction)
	// within a single session, and should be randomized between sessions to
	// reduce the chance of collision.
	Identifier uint64         `protobuf:"varint,4,opt,name=identifier" json:"identifier,omitempty"`
	Status     Message_Status `protobuf:"varint,5,opt,name=status,enum=ricochet.Message_Status" json:"status,omitempty"`
	Text       string         `protobuf:"bytes,6,opt,name=text" json:"text,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *Message) GetSender() *Entity {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Message) GetRecipient() *Entity {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func init() {
	proto.RegisterType((*ConversationEvent)(nil), "ricochet.ConversationEvent")
	proto.RegisterType((*MonitorConversationsRequest)(nil), "ricochet.MonitorConversationsRequest")
	proto.RegisterType((*Entity)(nil), "ricochet.Entity")
	proto.RegisterType((*Message)(nil), "ricochet.Message")
	proto.RegisterEnum("ricochet.ConversationEvent_Type", ConversationEvent_Type_name, ConversationEvent_Type_value)
	proto.RegisterEnum("ricochet.Message_Status", Message_Status_name, Message_Status_value)
}

func init() { proto.RegisterFile("conversation.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 413 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xf1, 0xdf, 0xd8, 0x13, 0x40, 0xee, 0x1c, 0x90, 0x25, 0xfe, 0xa8, 0x32, 0x97, 0x9e,
	0x2c, 0x14, 0x78, 0x81, 0xaa, 0x5e, 0xa1, 0x48, 0x6e, 0x1a, 0xd6, 0x35, 0xe2, 0x6a, 0xec, 0x6d,
	0x59, 0x89, 0xd8, 0xc6, 0xbb, 0xad, 0xe8, 0x63, 0x71, 0xe7, 0xe1, 0x18, 0x6f, 0x1c, 0x39, 0x28,
	0xb7, 0xdd, 0xf9, 0x7e, 0xe3, 0xfd, 0x66, 0x3e, 0x03, 0xd6, 0x5d, 0xfb, 0x28, 0x06, 0x55, 0x69,
	0xd9, 0xb5, 0x69, 0x3f, 0x74, 0xba, 0xc3, 0x60, 0x90, 0x75, 0x57, 0xff, 0x10, 0x3a, 0xf9, 0x63,
	0xc1, 0xd9, 0xd5, 0x11, 0xc0, 0x1e, 0x45, 0xab, 0xf1, 0x13, 0xb8, 0xfa, 0xa9, 0x17, 0xb1, 0x75,
	0x6e, 0x5d, 0xbc, 0x5c, 0x9d, 0xa7, 0x07, 0x3c, 0x3d, 0x41, 0xd3, 0x5b, 0xe2, 0xb8, 0xa1, 0xf1,
	0x3d, 0x38, 0x3b, 0x75, 0x1f, 0xdb, 0xd4, 0xb4, 0x5c, 0x9d, 0xcd, 0x4d, 0xd7, 0x42, 0xa9, 0xea,
	0x5e, 0xf0, 0x51, 0x4d, 0x2e, 0xc1, 0x1d, 0x5b, 0x30, 0x00, 0x77, 0x53, 0xe6, 0x79, 0xf4, 0x0c,
	0x9f, 0x43, 0xb0, 0xbd, 0xd9, 0x96, 0xf9, 0xe5, 0x2d, 0x8b, 0x2c, 0x5c, 0xc2, 0x82, 0xb3, 0x2b,
	0xb6, 0xfe, 0xca, 0x22, 0x7b, 0x84, 0x0a, 0xb6, 0xc9, 0x22, 0x07, 0x01, 0xfc, 0x72, 0x9b, 0x8d,
	0x88, 0x9b, 0xbc, 0x85, 0xd7, 0xd7, 0x5d, 0x2b, 0x75, 0x37, 0x1c, 0xdb, 0x51, 0x5c, 0xfc, 0x7a,
	0x10, 0x4a, 0x27, 0xdf, 0xc0, 0x67, 0xad, 0x96, 0xfa, 0x09, 0xdf, 0x40, 0x48, 0xc3, 0xeb, 0xaa,
	0xd6, 0xeb, 0xc6, 0xcc, 0xe2, 0xf1, 0xb9, 0x80, 0x31, 0x2c, 0xaa, 0xa6, 0x19, 0xc8, 0x9c, 0xb1,
	0x1c, 0xf2, 0xc3, 0x15, 0x5f, 0x81, 0x2f, 0x55, 0x21, 0x7e, 0xde, 0xc5, 0x0e, 0x09, 0x01, 0x9f,
	0x6e, 0xc9, 0x5f, 0x1b, 0x16, 0xd3, 0x30, 0x78, 0x01, 0xbe, 0x12, 0x6d, 0x23, 0x06, 0xf3, 0xe1,
	0xe5, 0x2a, 0x9a, 0xe7, 0xdd, 0xbf, 0xce, 0x27, 0x1d, 0x53, 0x08, 0x07, 0x51, 0xcb, 0x5e, 0xd2,
	0xba, 0xa6, 0xe5, 0x9c, 0xc2, 0x33, 0x32, 0xba, 0xd6, 0x72, 0x47, 0x93, 0x54, 0xbb, 0xde, 0x18,
	0x70, 0xf8, 0x5c, 0xc0, 0x77, 0x00, 0xb2, 0x21, 0x4c, 0xde, 0x49, 0x7a, 0xdb, 0x25, 0xd9, 0xe5,
	0x47, 0x15, 0xfc, 0x40, 0xbe, 0x74, 0xa5, 0x1f, 0x54, 0xec, 0x99, 0xf0, 0xe2, 0x93, 0x1c, 0xd2,
	0xc2, 0xe8, 0x7c, 0xe2, 0x10, 0x29, 0x6c, 0xf1, 0x5b, 0xc7, 0xbe, 0x59, 0x82, 0x39, 0x27, 0x05,
	0xf8, 0x7b, 0xea, 0xff, 0x9c, 0xa6, 0x64, 0x32, 0xca, 0x89, 0x02, 0xf9, 0x52, 0xb2, 0x92, 0xce,
	0xf6, 0x98, 0xd9, 0x18, 0xd3, 0x7a, 0xf3, 0x99, 0x92, 0x7a, 0x01, 0x61, 0xc6, 0x72, 0xa2, 0x38,
	0x69, 0x2e, 0x86, 0xe0, 0x31, 0xce, 0x6f, 0x78, 0xe4, 0x7d, 0xf7, 0xcd, 0xcf, 0xf7, 0xf1, 0x5f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x58, 0x7a, 0x99, 0xbe, 0x92, 0x02, 0x00, 0x00,
}
